#reattach to user namespace 
set-option -g default-command "reattach-to-user-namespace -l zsh"
# bind copy
bind C-c run "tmux show-buffer | reattach-to-user-namespace pbcopy"
# bind paste 
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

set -g default-terminal "screen-256color"

#replace action key as C-a 
set-option -g prefix C-a

# C-a C-a will swap to last used window
bind-key C-a last-window


#use vim keybindings 
set-window-option -g mode-keys vi

#nav keys 
bind h select-pane -L 
bind j select-pane -D 
bind k select-pane -U 
bind l select-pane -R 

#resize pnes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

#split pane keys
bind s split-window -v
bind v split-window -h

#reload 
bind r source-file ~/.tmux.conf

#kill the session 
bind R kill-session

bind w last-pane \; resize-pane -Z

#start index with 1. very un-dev
set -g base-index 1
setw -g pane-base-index 1

# Make it possible to automatically enter scrolling / selection mode
# on mouse wheel events!  Then dragging with the mouse causes a tmux
# selection buffer to be set.  Requires a terminal that sends mouse
# location codes (iTerm2, xterm, etc., but NOT Terminal.App).
set-window-option -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on

# ***************
# theme 
# *************** 

# # Coloring everything
set -g status-fg white
set -g status-bg "#111111"
setw -g window-status-fg "#009999"
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg black
setw -g window-status-current-bg "#00AAAA"
setw -g window-status-current-attr dim
set -g pane-border-fg "#009999"
set -g pane-border-bg black
set -g pane-active-border-fg "#009999"
set -g pane-active-border-bg "#004444"
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# statusbar
set -g status-utf8 on
set -g status-interval 10
set -g status-left-length 40
set -g status-justify centre
set -g status-left "#[fg=#009999]#(git rev-parse --abbrev-ref HEAD | tr -d ' ') [#(git log --oneline master...`git rev-parse --abbrev-ref HEAD` | wc -l  | tr -d ' ')]"
set -g status-right "#[fg=#009999]%R #(battery)  #(memory)"
